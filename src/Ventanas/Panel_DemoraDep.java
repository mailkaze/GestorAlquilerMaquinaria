/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.General;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;

/**
 *
 * @author Kaze
 */
public class Panel_DemoraDep extends javax.swing.JPanel {
    private void cargartablaDeuda() throws IOException{
        General.ModeloTablaDemora.setRowCount(0);
        General.ModeloTablaDemora.setColumnCount(0);
        tablaDemora.setModel(Clases.General.ModeloTablaDemora);
        General.ModeloTablaDemora.addColumn("ID");
        General.ModeloTablaDemora.addColumn("Fecha Recepción");
        General.ModeloTablaDemora.addColumn("Fecha Depósito");
        General.ModeloTablaDemora.addColumn("Cobrado por");
        General.ModeloTablaDemora.addColumn("Monto");
        General.ModeloTablaDemora.addColumn("Días transcurridos");
        tablaDemora.setModel(Clases.General.ModeloTablaDemora); //Asignamos el Modelo a la tablaDeuda.
    }
    private void comprobarDemora() throws FileNotFoundException, IOException{
        General.ModeloTablaDemora.setRowCount(0);
        tablaDemora.setModel(Clases.General.ModeloTablaDemora);
        POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream("SokolmetDB"));
        HSSFWorkbook libro = new HSSFWorkbook(fs);
        HSSFSheet Alquileres = libro.getSheetAt(1);
        int NumAlquileres = Alquileres.getLastRowNum();
        Object Datos[]=new Object[6]; //Numero de columnas de la tablaDemora, es un Array de objetos.
        Calendar fecha1=new GregorianCalendar(), fecha2=new GregorianCalendar();
        String strFormato="dd/MM/yyyy";
        DateFormat formatoFecha = new SimpleDateFormat(strFormato);
        Date date = new Date();
        for (int a=1;a<=NumAlquileres;a++){
            //si está terminado
            if (Alquileres.getRow(a).getCell(25).getBooleanCellValue()==false){
                try{//por si no hay fecha de depósito
                    //Conversión de String a Calendar:
                    date = formatoFecha.parse(Alquileres.getRow(a).getCell(23).getStringCellValue());
                    fecha1.setTime(date);
                    date = formatoFecha.parse(Alquileres.getRow(a).getCell(30).getStringCellValue());
                    fecha2.setTime(date);
                    long Dif = (fecha2.getTimeInMillis() - fecha1.getTimeInMillis())/(24*60*60*1000);
                    if (Dif>2){//si la diferencia de días es más de dos...
                        Datos[0]=(int)Alquileres.getRow(a).getCell(0).getNumericCellValue();
                        Datos[1]=Alquileres.getRow(a).getCell(23).getStringCellValue();
                        Datos[2]=Alquileres.getRow(a).getCell(30).getStringCellValue();
                        Datos[3]=Alquileres.getRow(a).getCell(27).getStringCellValue();
                        Datos[4]=(Alquileres.getRow(a).getCell(6).getNumericCellValue()+
                                  Alquileres.getRow(a).getCell(9).getNumericCellValue()+
                                  Alquileres.getRow(a).getCell(12).getNumericCellValue()+
                                  Alquileres.getRow(a).getCell(15).getNumericCellValue()+
                                  Alquileres.getRow(a).getCell(18).getNumericCellValue()+
                                  Alquileres.getRow(a).getCell(21).getNumericCellValue());
                        Datos[5]=Dif;
                        Clases.General.ModeloTablaDemora.addRow(Datos);
                    }
                }catch(Exception e){}
            }
        }
        tablaDemora.setModel(Clases.General.ModeloTablaDemora);
    }
    /**
     * Creates new form Panel_DemoraDep
     */
    public Panel_DemoraDep() throws IOException {
        initComponents();
        cargartablaDeuda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDemora = new javax.swing.JTable();
        cmdComprobar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(472, 379));

        jLabel1.setText("Alquileres donde se demoró más de 2 días desde el pago hasta el depósito en banco:");

        tablaDemora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaDemora);

        cmdComprobar.setText("Comprobar");
        cmdComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdComprobarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdComprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdComprobar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdComprobarActionPerformed
        try {
            comprobarDemora();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Panel_DemoraDep.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Panel_DemoraDep.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmdComprobarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdComprobar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDemora;
    // End of variables declaration//GEN-END:variables
}
